private boolean shouldSendTrace(AtfTrace trace) {
    boolean hasIndividualInfo = trace.getIndividual() != null && trace.getIndividual().stream().anyMatch(
        ind -> ind.getFirstName() != null ||
               ind.getLastName() != null ||
               ind.getRace() != null ||
               ind.getSex() != null ||
               ind.getStreetName() != null ||
               ind.getCity() != null ||
               ind.getState() != null ||
               ind.getZipCode() != null ||
               ind.getCountry() != null);

    boolean hasRequestorInfo = trace.getRequestor() != null && (
        trace.getRequestor().getPrimaryOfficerLastName() != null ||
        trace.getRequestor().getPrimaryOfficerFirstName() != null);

    boolean hasRecoveryInfo = trace.getRecovery() != null && (
        trace.getRecovery().getRecoveryDate() != null ||
        trace.getRecovery().getState() != null ||
        trace.getRecovery().getZipCode() != null ||
        trace.getRecovery().getCity() != null ||
        trace.getRecovery().getCountry() != null);

    boolean shouldSend = hasIndividualInfo || hasRequestorInfo || hasRecoveryInfo;

    if (shouldSend) {
        if (trace.getRequestor() == null) {
            trace.setRequestor(new AtfRequestor());
        }
        trace.getRequestor().setRequestorEtraceUserId("USCBPTWS1");
    }

    return shouldSend;
}

    if (method == HttpMethod.PUT) {
        // Filter and send only valid traces for update
        traces = traces.stream().filter(this::shouldSendTrace).collect(Collectors.toList());
    }

    if (traces.isEmpty()) {
        LOG.info("No valid traces to send for incident {}.", incidentNumber);
        return;
    }
